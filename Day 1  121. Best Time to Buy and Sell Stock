/* brute force approach O(n^2) time complexity */

class Solution {
public:
    int maxProfit(vector<int>& prices) {
       int maxi=0; 
       for(int i=0;i<prices.size();i++)
       {
           for(int j=i+1;j<prices.size();j++)
           {
               if(prices[j]-prices[i] > maxi)
                   maxi=prices[j]-prices[i];
           }
       }
        return maxi;
    }
};


/* optimized approach O(n) time complexity */

class Solution {
public:
    int maxProfit(vector<int>& prices) {
       int maxprofit = 0;//maxprofit variable for storing final maximum profit.
       int mini = INT_MAX;//mini variable to keep track of minimum element
       for(int i=0;i<prices.size();i++)
       { 
         mini = min(mini,prices[i]);
         if(maxprofit < prices[i]-mini)
            maxprofit = prices[i] - mini;
       }
        return maxprofit;
    }
};
